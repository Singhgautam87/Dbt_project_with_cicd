name: dbt Data Pipeline CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DB_HOST: 172.17.0.3
  DB_USER: admin
  DB_PASSWORD: admin
  DB_NAME: test_db
  DB_SCHEMA: public
  DB_PORT: 5432

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-postgres soda-core-postgres psycopg2-binary
        
    - name: Create profiles.yml
      run: |
        mkdir -p ~/.dbt
        cat > ~/.dbt/profiles.yml << EOF
        dbt_project_2:
          target: dev
          outputs:
            dev:
              type: postgres
              host: \${{ env.DB_HOST }}
              user: \${{ env.DB_USER }}
              password: \${{ env.DB_PASSWORD }}
              port: \${{ env.DB_PORT }}
              dbname: \${{ env.DB_NAME }}
              schema: \${{ env.DB_SCHEMA }}
              threads: 4
              keepalives_idle: 0
              search_path: \${{ env.DB_SCHEMA }}
        EOF
        
    - name: dbt debug
      run: dbt debug
      
    - name: dbt compile
      run: dbt compile
      
    - name: dbt test
      run: dbt test
      
    - name: dbt run
      run: dbt run
      
    - name: Run Soda data quality checks
      run: |
        cd soda_project
        soda scan -d postgres -c configuration.yml checks/checks.yml || true
        
    - name: Save validation results
      run: python save_validation_results.py
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dbt-artifacts
        path: target/
        
  deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-postgres soda-core-postgres psycopg2-binary
        
    - name: Create profiles.yml for production
      run: |
        mkdir -p ~/.dbt
        cat > ~/.dbt/profiles.yml << EOF
        dbt_project_2:
          target: prod
          outputs:
            prod:
              type: postgres
              host: \${{ env.DB_HOST }}
              user: \${{ env.DB_USER }}
              password: \${{ env.DB_PASSWORD }}
              port: \${{ env.DB_PORT }}
              dbname: \${{ env.DB_NAME }}
              schema: \${{ env.DB_SCHEMA }}
              threads: 4
              keepalives_idle: 0
              search_path: \${{ env.DB_SCHEMA }}
        EOF
        
    - name: Deploy to production
      run: |
        dbt run --target prod
        dbt test --target prod
        
    - name: Run production data quality checks
      run: |
        cd soda_project
        soda scan -d postgres -c configuration.yml checks/checks.yml || true
        
    - name: Save production validation results
      run: python save_validation_results.py
